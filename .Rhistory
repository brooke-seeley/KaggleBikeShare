## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(timestamp, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
baked <- bake(prep(bike_recipe), new_data = NULL)
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
head(baked, 5)
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression") %>%
fit(formula=log(count)~., data=trainData)
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(logcount = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(logcount~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression") %>%
fit(formula=log(count)~., data=trainData)
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
rlang::last_trace()
class(bike_model)
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
bike_recipe <- recipe(log(count)~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
bike_recipe <- recipe(logcount~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
rlang::last_trace()
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday))
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_mutate(holiday=factor(holiday), workingday=factor(workingday)) %>%
step_corr(all_predictors(), threshold=0.5)
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(
count_pred = {
sigma2 <- var(residuals(fit(bike_workflow, data = trainData)$fit))
exp(.pred + 0.5 * sigma2)
}
)
fitted_lm <- extract_fit_parsnip(fit(bike_workflow, data = trainData))
sigma2 <- var(residuals(fitted_lm))
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred) - 1)
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = pmax(0, exp(.pred)))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
fit_wf <- fit(bike_workflow, data = trainData)
sigma2 <- var(trainData$count - predict(fit_wf, new_data = trainData)$.pred)
bike_predictions <- predict(fit_wf, new_data = testData) %>%
mutate(count_pred = exp(.pred + 0.5 * sigma2))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count),
holiday=factor(holiday), workingday=factor(workingday))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_poly(temp, degree=2)
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
fit_wf <- fit(bike_workflow, data = trainData)
sigma2 <- var(trainData$count - predict(fit_wf, new_data = trainData)$.pred)
bike_predictions <- predict(fit_wf, new_data = testData) %>%
mutate(count_pred = exp(.pred + 0.5 * sigma2))
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_poly(temp, degree=2)
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=factor(ifelse(weather == 4, 3, weather))) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather=factor(weather))
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather=factor(weather)) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data = NULL)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather=as.factor(weather)) %>%
step_mutate(holiday=as.factor(holiday)) %>%
step_mutate(workingday=as.factor(workingday))
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather=as.factor(weather)) %>%
step_mutate(holiday=as.factor(holiday)) %>%
step_mutate(workingday=as.factor(workingday)) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data=trainData)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count_pred = exp(.pred))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather=as.factor(weather)) %>%
step_mutate(holiday=as.factor(holiday)) %>%
step_mutate(workingday=as.factor(workingday)) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data=trainData)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(count = exp(count))
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in Training Data & Clean
trainData <- vroom('train.csv') %>%
select(-casual, -registered) %>%
mutate(count = log(count))
## Read in Test Data
testData <- vroom('test.csv')
## Feature Engineering
bike_recipe <- recipe(count~., data=trainData) %>%
step_mutate(weather=ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather=as.factor(weather)) %>%
step_mutate(holiday=as.factor(holiday)) %>%
step_mutate(workingday=as.factor(workingday)) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(season=factor(season)) %>%
step_date(datetime, features="dow")
## Print First 5 Rows of Baked Dataset
baked <- bake(prep(bike_recipe), new_data=trainData)
head(baked, 5)
## Create Regression Model
bike_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
## Create Workflow
bike_workflow <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(bike_model) %>%
fit(data=trainData)
## Run Predictions
bike_predictions <- predict(bike_workflow, new_data = testData) %>%
mutate(.pred = exp(.pred))
## Format the Predictions for Submission to Kaggle
kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(datetime=as.character(format(datetime)))
## Write Submission File
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=',')
baked <- bake(prep(bike_recipe), new_data=trainData)
head(baked, 5)
baked <- bake(prep(bike_recipe), new_data=trainData)
head(baked, 5)
